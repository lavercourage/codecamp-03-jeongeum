//신규페이지
import Example from "../../src/componentsanynameok/unit/example/Example.container"

export default function ExampleNewPage(){
    return(
        <Example isEdit={false}/>
    )
}


// 2. 뉴 보드와 에딧 보드는 형태가 같으므로 한 형태만 잘라서 컨테이너에 가져다가 붙임
// 2-1. 리턴에 해당하는 부분은 둘은 공통 레이아웃에 부모역할을 하고 프레젠터의 리턴부분에 해당 리턴값을 넣음 (3.내용은 이그잼플프레젠터)

// 4. 임포트해서 이그잼플이라는 컨테이너 가져오기(뉴, 에딧 두 페이지 모두) / 레이아웃은 컨테이너의 자식요소인 프레젠터에 있음
// 4-1. 리턴에 그 이그잼플 넣기

// 5. 각각 프롭스를 넣어서 뉴페이지, 에딧페이지 구분할 예정

// 6. 각각 이즈에딧을 넣어 값을 정해주고 그 값에 따라 페이지 보이는걸 다르게 할 예정
// 6-1. IsEditsms는 Boolean값을 가진다.
// 6-2. public bool IsEdit {get;} 행이 편집모드이면 true, 그렇지 않으면 false
// 6-3. 아마도 뉴페이지는 편집모드가 아니고 보는 뷰라 false값을 주신듯 하고,
// 6-4. 에딧페이지는 수정하는 페이지라 true값을 주신듯 하다. (내 추측임..)
// 6-5. is 변수명을 지을 때 is/has는 불린값 가짐
// 6-6. >>>>>>저 isEdit의 변수명은 다른걸로 해도 ㄱㅊ!, 비슷한 함수명을 가져오심 abc로 해도 상관없음

// 9. 등록하기 - 등록하기 뮤테이션 / 수정하기 - 수정하기 뮤테이션
// 9-1. 수정하기에는 어떤내용을 수정할건지 글 내용의 해당하는 번호나 id가 있음
// 9-2. 수정하기 주소는 주소가 정해져있지 않음
// 9-3. 수정하려는 해당 내용을 가지고 오기 위해서는 주소 뒤에 라우터가 들어와야함.

// 10. 엑스포트 내용에
// const [abc, setAbc] = useState(false)
// return ( <Example abc={abc} /> )
// useState의 기본값은 false의 값
// 이렇게 해도 노상관
// 그렇다면 펑션 기능 위에 임포트로 useState가져와야할듯